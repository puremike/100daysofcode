SELECTORS
Type	elementname
ID	#id
Group	elementname, elementname (i.e h1, h2 {} / a, p {})
Class	.class

COMBINATORS
Descendant 	li p / main p	-	All p with li/main as ancestor
Child		h2 > p 	-		Only p with are direct children of h2
	

INLINE VS BLOCK LEVEL DISPLAY

Display:block; - A Block-level element occupies the entire horizontal space of its parent element (container), and vertical space equal to the height of its contents, thereby creating a "block".

Display:inline; - Inline elements are those which only occupy the space bounded by the tags defining the element, instead of breaking the flow of the content. AN INLINE ELEMENT does not start on a new line and only takes up as much width as necessary.
	
By default, block-level elements begin on new lines, but inline elements can start anywhere in a line.

More on Display (Block and Inline): 
https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements
https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements

Note: Margin collapsing only affect the block element. AS we know, Vertical Margins can't be applied to inline elements.



1. position: relative, absolute, fixed,, static // absolute will adjust to the previous element; relative will allow an element position to be changed; fixed will keep an element even while scrolling.

2. Display: flex; flex will align elements next to each other | flex-wrap: wrap/no-wrap; will wrap or unwrap flex items | align-items: center; will centralize flex items | justify-contents: space-between; will bring any available spaces of the flex items between them.

3. box-sizing: border-box; will enable an element to main a specific width.'

4. box-shadow: 1px 1px 2px rgba(0,0,0,opacity); will create a shadow effect around that box or element

5. text-shadow: 1px 1px 2px rgba(0,0,0,opacity0; will create a shadow effect around a text element

6. background-size: cover; will use the entire width of the page | background-position: center; will centralize the image.

7. Object-fit: cover; which is used to keep image aspect ratio while following other styling properties.

//Creating CARD in Class
1. overflow: visible/hidden;

display: grid;
grid-template-column: 1fr 1fr;
gap: 50px 50px;

li:nth-of-type() {
    grid-column: 1 span 2 // 1 / 3;
}